name: Deploy Odoo Modules to Server

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up SSH key for secure communication
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SERVER_IP }}

      # Add server to known_hosts
      - name: Add Known Hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # Deploy changes to the server
      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            # Navigate to the target directory
            cd /opt/custom_modules

            # Debugging: Check SSH access to GitHub
            ssh -T git@github.com || { echo "SSH to GitHub failed"; exit 1; }

            # Remove existing .git to avoid conflicts
            rm -rf .git

            # Initialize new git repository
            git init
            git remote add origin git@github.com:${{ github.repository }}.git

            # Debugging: Verify remote
            git remote -v

            # Fetch and checkout the main branch
            if ! git fetch origin; then
              echo "Failed to fetch from origin"
              exit 1
            fi
            if ! git checkout main; then
              echo "Failed to checkout main branch"
              exit 1
            fi

            # Pull the latest changes
            if ! git pull origin main --verbose; then
              echo "Failed to pull changes"
              exit 1
            fi

            # Fix permissions
            chown -R root:root /opt/custom_modules
            chmod -R 755 /opt/custom_modules
          EOF

      # Restart Odoo Service
      - name: Restart Odoo Service
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            # Restart the Odoo service
            if ! systemctl restart ${{ secrets.ODOO_SERVICE }}; then
              echo "Failed to restart Odoo service"
              exit 1
            fi

            # Verify the service is running
            if systemctl is-active --quiet ${{ secrets.ODOO_SERVICE }}; then
              echo "Odoo service restarted successfully."
            else
              echo "Odoo service is not running"
              exit 1
            fi
          EOF
